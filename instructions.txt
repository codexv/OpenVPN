https://www.digitalocean.com/community/tutorials/how-to-set-up-an-openvpn-server-on-debian-9
Check website for prerequisites.

===========================================
Step 1: Installing OpenVPN and EasyRSA
===========================================

(SERVER)
sudo apt update
sudo apt install openvpn


EasyRSA (SERVER & CA)
wget -P ~/ https://github.com/OpenVPN/easy-rsa/releases/download/v3.0.7/EasyRSA-3.0.7.tgz

(check latest version at https://github.com/OpenVPN/easy-rsa/releases)

cd ~
tar xvf EasyRSA-3.0.7.tgz


===========================================
Step 2: EasyRSA Variables & Building the CA
===========================================

(CA)
cd ~/EasyRSA-3.0.7/
cp vars.example vars
nano vars

. . .

set_var EASYRSA_REQ_COUNTRY    "US"
set_var EASYRSA_REQ_PROVINCE   "NewYork"
set_var EASYRSA_REQ_CITY       "New York City"
set_var EASYRSA_REQ_ORG        "DigitalOcean"
set_var EASYRSA_REQ_EMAIL      "admin@example.com"
set_var EASYRSA_REQ_OU         "Community"

. . .

./easyrsa init-pki
./easyrsa build-ca nopass

Common name [Easy-RSA CA]

===========================================
Step 3: Server Cert, Key & Encryption Files
===========================================

(SERVER)
cd EasyRSA-3.0.7/
./easyrsa init-pki
./easyrsa gen-req server nopass     (server = common name)
sudo cp ~/EasyRSA-3.0.7/pki/private/server.key /etc/openvpn/
scp ~/EasyRSA-3.0.7/pki/reqs/server.req sammy@your_CA_ip:/tmp

(CA)
cd EasyRSA-3.0.7/
./easyrsa import-req /tmp/server.req server
./easyrsa sign-req server server    (sign-req, request type, common name)

(SERVER) Transfer signed cert back to VPN Server machine
scp sammy@your_CA_ip:/home/sammy/EasyRSA-3.0.7/pki/issued/server.crt /tmp
scp sammy@your_CA_ip:/home/sammy/EasyRSA-3.0.7/pki/ca.crt /tmp
sudo cp /tmp/{server.crt,ca.crt} /etc/openvpn/
cd EasyRSA-3.0.7/
./easyrsa gen-dh    (this will take several minutes)
sudo openvpn --genkey --secret ta.key
sudo cp ~/EasyRSA-3.0.7/ta.key /etc/openvpn/
sudo cp ~/EasyRSA-3.0.7/pki/dh.pem /etc/openvpn/


===========================================
Step 4: Generate a Client Cert & Key Pair
===========================================

(SERVER)
mkdir -p ~/client-configs/keys      (no need to repeat)
chmod -R 700 ~/client-configs       (no need to repeat)
cd ~/EasyRSA-3.0.7/
./easyrsa gen-req client1 nopass
cp pki/private/client1.key ~/client-configs/keys/
scp pki/reqs/client1.req sammy@CA:/tmp

(CA)
cd EasyRSA-3.0.7
./easyrsa import-req /tmp/client1.req client1
./easyrsa sign-req client client1   (sign-req, request type, common name)

(SERVER)
scp sammy@your_CA_ip:/home/sammy/EasyRSA-3.0.7/pki/issued/client1.crt /tmp
cp /tmp/client1.crt ~/client-configs/keys/
sudo cp ~/EasyRSA-3.0.7/ta.key ~/client-configs/keys/   (no need to repeat)
sudo cp /etc/openvpn/ca.crt ~/client-configs/keys/      (no need to repeat)


===========================================
Step 5: Configure OpenVPN Service
===========================================

(SERVER)
sudo cp /usr/share/doc/openvpn/examples/sample-config-files/server.conf.gz /etc/openvpn/
sudo gzip -d /etc/openvpn/server.conf.gz
sudo nano /etc/openvpn/server.conf

tls-auth ta.key 0 # This file is secret     (uncomment if commented)

cipher AES-256-CBC
auth SHA256     (add this line)

dh dh.pem       (remove 2048)

user nobody     (uncomment)
group nogroup   (uncomment)

push "redirect-gateway def1 bypass-dhcp"    (uncomment/optional)

push "dhcp-option DNS 208.67.222.222"
push "dhcp-option DNS 208.67.220.220"

port 443        (optional)

proto tcp       (optional)
explicit-exit-notify 0  (if using tcp)

cert customservername.crt   (if non-default creds)
key customservername.key    (if non-default creds)


===========================================
Step 6: Adjusting Server Network Config
===========================================

(SERVER)
sudo nano /etc/sysctl.conf

net.ipv4.ip_forward=1       (uncomment)

sudo sysctl -p

ip route | grep default     (take note of public interface (after "dev"))

sudo nano /etc/ufw/before.rules (assuming you have ufw installed already)

#
# rules.before
#
# Rules that should be run before the ufw command line added rules. Custom
# rules should be added to one of these chains:
#   ufw-before-input
#   ufw-before-output
#   ufw-before-forward
#

Add these lines:

# START OPENVPN RULES
# NAT table rules
*nat
:POSTROUTING ACCEPT [0:0] 
# Allow traffic from OpenVPN client to eth0 (change to the interface you discovered!)
-A POSTROUTING -s 10.8.0.0/8 -o eth0 -j MASQUERADE
COMMIT
# END OPENVPN RULES

-save and close-

sudo nano /etc/default/ufw

DEFAULT_FORWARD_POLICY="ACCEPT"     (Change from DROP to ACCEPT)

sudo ufw allow 1194/udp     (use the port and protocol accordingly)
sudo ufw allow OpenSSH

sudo ufw disable
sudo ufw enable


===========================================
Step 7: Start & Enable OpenVPN Service
===========================================

(SERVER)
sudo systemctl start openvpn@server
sudo systemctl status openvpn@server
ip addr show tun0
sudo systemctl enable openvpn@server


===========================================
Step 8: Create Client Config Infrastructure
===========================================

(SERVER)
mkdir -p ~/client-configs/files
cp /usr/share/doc/openvpn/examples/sample-config-files/client.conf ~/client-configs/base.conf
nano ~/client-configs/base.conf
. . .
# The hostname/IP and port of the server.
# You can have multiple remote entries
# to load balance between the servers.
remote your_server_ip 1194
. . .

proto udp

# Downgrade privileges after initialization (non-Windows only)
user nobody
group nogroup

# SSL/TLS parms.
# See the server config file for more
# description.  It's best to use
# a separate .crt/.key file pair
# for each client.  A single ca
# file can be used for all clients.
#ca ca.crt          (comment out)
#cert client.crt    (comment out)
#key client.key     (comment out)

# If a tls-auth key is used on the server
# then every client must also have the key.
#tls-auth ta.key 1  (comment out)

cipher AES-256-CBC
auth SHA256     (add this line as well)

key-direction 1     (must be set to 1)

Add these commented lines:
# script-security 2
# up /etc/openvpn/update-resolv-conf
# down /etc/openvpn/update-resolv-conf

(you only need to enable them for Linux clients that ship with an 
/etc/openvpn/update-resolv-conf file. This script uses the resolvconf 
utility to update DNS information for Linux clients.)

(If your client is running Linux and has an /etc/openvpn/update-resolv-conf file, 
uncomment these lines from the client’s configuration file after it has been generated.)

-save&close-

nano ~/client-configs/make_config.sh

#!/bin/bash

# First argument: Client identifier

KEY_DIR=/home/sammy/client-configs/keys
OUTPUT_DIR=/home/sammy/client-configs/files
BASE_CONFIG=/home/sammy/client-configs/base.conf

cat ${BASE_CONFIG} \
    <(echo -e '<ca>') \
    ${KEY_DIR}/ca.crt \
    <(echo -e '</ca>\n<cert>') \
    ${KEY_DIR}/${1}.crt \
    <(echo -e '</cert>\n<key>') \
    ${KEY_DIR}/${1}.key \
    <(echo -e '</key>\n<tls-auth>') \
    ${KEY_DIR}/ta.key \
    <(echo -e '</tls-auth>') \
    > ${OUTPUT_DIR}/${1}.ovpn

(change sammy to your own non-root account)
-save&close-

chmod 700 ~/client-configs/make_config.sh


===========================================
Step 9: Generate Client Configurations
===========================================

(SERVER)
cd ~/client-configs
sudo ./make_config.sh client1

ls ~/client-configs/files

output:
client1.ovpn

Transfer this file to your client device (computer or mobile phone)


===========================================
Step 10: Install the Client Configuration
===========================================

Windows:
Download OpenVPN client application for Windows
https://openvpn.net/index.php/open-source/downloads.html

After installing OpenVPN, copy the .ovpn file to:
C:\Program Files\OpenVPN\config

When you launch OpenVPN, it will automatically see the profile and make it available.


MacOS:
Use Tunnelblick, double click on client1.ovpn


Linux:
sudo apt update
sudo apt install openvpn
ls /etc/openvpn     (check if you see update-resolv-conf)

nano client1.ovpn   

(if you were able to find an update-resolv-conf uncommemt the following)
script-security 2
up /etc/openvpn/update-resolv-conf
down /etc/openvpn/update-resolv-conf

Now, you can connect to the VPN by just pointing the openvpn command 
to the client configuration file:

sudo openvpn --config client1.ovpn

Note: If you encounter problems above, make sure that network-manager-openvpn is installed
and try to use the VPN options on your Network Settings.


iOS:
OpenVPN Connect

Android:
Android OpenVPN Connect


===========================================
Step 11: Test Your VPN Connection
===========================================

https://www.dnsleaktest.com/
Extended Test

Compare both with VPN and without


===========================================
Step 12: Revoking Client Certificates
===========================================

Occasionally, you may need to revoke a client certificate to prevent 
further access to the OpenVPN server.

To do so, navigate to the EasyRSA directory on your CA machine:

cd EasyRSA-3.0.7/

Next, run the easyrsa script with the revoke option, 
followed by the client name you wish to revoke:

./easyrsa revoke client2

./easyrsa gen-crl

scp ~/EasyRSA-3.0.4/pki/crl.pem sammy@your_server_ip:/tmp

(SERVER)
sudo cp /tmp/crl.pem /etc/openvpn
sudo nano /etc/openvpn/server.conf

At the bottom of the file, add the crl-verify option, 
which will instruct the OpenVPN server to check the certificate revocation 
list that we’ve created each time a connection attempt is made:

crl-verify crl.pem

-save&close-

sudo systemctl restart openvpn@server


To revoke additional clients, follow this process:

1. Revoke the certificate with the ./easyrsa revoke client_name command
2. Generate a new CRL
3. Transfer the new crl.pem file to your OpenVPN server and copy it to 
    the /etc/openvpn directory to overwrite the old list.
4. Restart the OpenVPN service.

You can use this process to revoke any certificates that you’ve 
previously issued for your server.


To configure more clients, you only need to follow 
steps 4 and 9-11 for each additional device. 

To revoke access to clients, just follow step 12.